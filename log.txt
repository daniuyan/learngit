
20180507 
1、	board-mx6q_sabresd.h 修改sgtl5000的I2S连接引脚和I2C引脚，修改tef6635的引脚
2、	board-mx6q_sabresd.c中添加名为imx-tef6635的平台设备，并设置平台设备的SSI数据
3、	删除原文件中对其他声卡的初始化函数
4、	移植sgtl5000部分的单板相关内容
5、	添加sgtl5000的控制函数
6、	在imx-tef6635中注册一个名为soc_audio的平台声卡设备，他会导致内核调用soc_core里面的驱动去注册一个声卡。
7、	给声卡设备分配一个私有数据snd_soc_card imx_tef6635，根据其中的soc_dai_link数据去注册驱动
8、	为imx-tef6635添加头文件
9、	在tef6635文件中注册平台驱动platform_driver_register(&tef6635_drv)，通过平台驱动的probe去注册codec和code_dai
10、	在sound/soc/codecs下的Makefile中添加snd-soc-tef6635-objs := tef6635.o和obj-$(CONFIG_SND_SOC_TEF6635)   += snd-soc-tef6635.o，将tef6635.c编入内核
11、	在sound/soc/imx下的Makefile中添加snd-soc-imx-tef6635-objs := imx-tef6635.o和obj-$(CONFIG_SND_SOC_IMX_TEF6635) += snd-soc-imx-tef6635.o，将imx-tef6635.c编入内核
12、	在arch/arm/configs/imx6_defconfig中将IMX下和CODECS下的TEF6635编入内核CONFIG_SND_SOC_IMX_TEF6635=y，CONFIG_SND_SOC_TEF6635=y
13、	修改imx-sgtl5000中的imx_sgtl5000_dai使用ssi0
14、	修改imx_audmux_config，配置audmux的clock方向，对于BT录音，sgtl5000的audmux设置需要修改为mx6输出pcm时钟，而tef6635仍然由codec输出pcm时钟。

20180508 
1、	对于配置SSI为slave模式，由codec来设置时钟。
2、	修改imx-sgtl5000中的sgtl5000_params函数，将dai_format模式设置为SND_SOC_DAIFMT_CBS_CFS。也就是对于BT录音功能，mx6为主设备，提供时钟。而对于播音，codec为主设备，提供同步时钟。

20180510
1、修改imx6_defconfig，将CONFIG_SND_SOC_TEF6635和CONFIG_SND_SOC_IMX_TEF6635打开
2、调试删除fixup_mxc_board中的codec与单板匹配的内容
3、mx6_sabresd_board_init中有对codec选择的代码删除
4、修改管理文件Kconfig，添加对TEF6635的支持select SND_SOC_TEF6635
config SND_SOC_IMX_SGTL5000
        tristate "SoC Audio support for i.MX boards with sgtl5000"
        depends on I2C && (MACH_MX35_3DS || MACH_MX51_BABBAGE \
                        || MACH_MX6Q_SABRELITE || MACH_MX6Q_ARM2 \
                        || MACH_MX6Q_SABRESD)
        select SND_SOC_SGTL5000
        select SND_MXC_SOC_MX2
        help
          Say Y if you want to add support for SoC audio on an i.MX board with
          a sgtl5000 codec.

config SND_SOC_IMX_TEF6635
        tristate "SoC Audio support for i.MX boards with tef6635"
        select SND_SOC_TEF6635
        select SND_MXC_SOC_MX2
        help
          Say Y if you want to add support for SoC audio on an i.MX board with
          a tef6635 codec.
5、imx-tef6635.c添加头文件 #include <mach/audmux.h>
6、imx-tef6635.c中添加imx_tef6635_remove函数

20180511
1、在文件sound/soc/imx/Kconfig下添加对IMX-TEF6635配置项的依赖
   depands on MACH_MX6Q_SABRESD
2、在文件sound/soc/codecs/Kconfig下添加对tef6635.o开关项的配置，并默认打开
#tef6635 codec is a virtual dev
config SND_SOC_TEF6635
        tristate "just for playback of rothwell"
        default y
3、tef6635_codec_driver tef6635_codec_driver这个变量并没有name，删去name属性
4、将uda1341_soc_probe改名为tef6635_probe
5、该probe内未实现的通知MCU初始化tef6635设备的函数删除，由中间件去做通知
6、修改tef6635里面的一些拼写问题
7、修改tef6635的tef6635_remove函数，给出返回值

20180514
1、编译模块  make ARCH=arm CROSS_COMPILE=/opt/freescale/usr/local/gcc-4.6.2-glibc-2.13-linaro-multilib-2011.12/fsl-linaro-toolchain/bin/arm-none-linux-gnueabi- modules
2、将modules安装到指定目录下 make ARCH=arm CROSS_COMPILE=/opt/freescale/usr/local/gcc-4.6.2-glibc-2.13-linaro-multilib-2011.12/fsl-linaro-toolchain/bin/arm-none-linux-gnueabi- modules_install INSTALL_MOD_PATH=/wrok/system/linux3.0.35/tmp
3、将生成的tmp目录下的lib打包并拷贝到开发板上,替换根目录下lib文件夹
此时查到/lib/modules/3.0.35-2666-gbdde708/modules_builtin文件，已经有了对tef6635的支持
4、将lib目录拷贝到烧写工具下的rootfs对应目录下，重新烧写即可。

20180518
1、board-mx6q_sabresd.c中的ldb_data的disp_id=0。 此处disp_id代表了LDVS的通道号，自研单板仅连接了LDVS0
2、修改uboot配置菜单，该配置在uboot-imx/common/cmd_scr_android.c中，修改codec部分的选项
3、修改uboot默认命令，默认使用ldb启动，该配置在uboot-imx/include/configs/mx6q_sabresd.h中，将CONFIG_UBOOT_KERNEL_LVDS宏打开
   同时修改#define DEFAULT_CODEC 	 "codec_name=audio_codec=tef6635\0"
4、去掉声卡codec和imx中的测试信息
6、在内核arch/arm/configs/imx6_defconfig中去掉对WM系列声卡驱动的配置，添加SGTL5000和TEF6635：
#CONFIG_SND_SOC_IMX_WM8962=y
#CONFIG_SND_SOC_IMX_WM8960=y
#CONFIG_SND_SOC_IMX_CS42888=y
CONFIG_SND_SOC_IMX_SGTL5000=y
CONFIG_SND_SOC_IMX_TEF6635=y

20180519
1、对比reference_driver和当前touchscreen下的gt9xx.c文件  
2、修改gt9xx.h中的CTP_CFG_GROUP，这个参数用来校验触摸屏是否准确。GTP_CUSTOM_CFG
3、测试时先不做修改，如果不准确再修改该参数

